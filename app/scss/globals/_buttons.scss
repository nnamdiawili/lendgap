
.btn {
  appearance: none;
  outline: none;
  font-family: $font-family-button;
  font-size: 1rem;
  font-weight: 500;
  text-decoration: none;
  position: relative;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  height: $button-size-normal;
  padding: 0 $button-size-normal;
  border-radius: $component-border-radius;
  overflow: hidden;
  z-index: 1;
  cursor: pointer;
  transition: $component-hover-fx-duration;

  .icon {
    width: $button-icon-size;
    height: $button-icon-size;
    transition: $component-hover-fx-duration;
  }
  > :not(:first-child) {
    margin-left: $button-icon-size;
  }
}


// -------------------------------------------------------------------------
// Button styles / effects:
// -------------------------------------------------------------------------

.btn-caps {
  text-transform: uppercase;
  font-weight: 500;
  font-size: .7rem;
  letter-spacing: 0.075rem;
}
.btn-chrome {
  &::before {
    @include position(absolute, null 0 0 0);
    content: '';
    background-color: $color-black;
    z-index: -1;
    height: 0;
    opacity: 0;
    transition: $component-hover-fx-duration;
  }
  &:hover::before {
    height: 50%;
    opacity: .05;
  }
  &:focus::before,
  &:active::before {
    height: 100%;
    opacity: .1;
  }
}
.btn-shadow {
  &, &:focus {
    box-shadow: $button-box-shadow;
  }
}

// -------------------------------------------------------------------------
// Button sizes
// -------------------------------------------------------------------------

.btn-sm {
  height: $button-size-sm;
  padding: 0 $button-size-sm;
}
.btn-md {
  height: $button-size-md;
  padding: 0 $button-size-md;
}
.btn-lg {
  height: $button-size-lg;
  padding: 0 $button-size-lg;
}


// -------------------------------------------------------------------------
// Button colors themes and styles
// -------------------------------------------------------------------------

// Theme colors  for the @btn-color-themes are specified as follows:
// theme-name: foreground-color background-color border-color
// WHERE: theme-name can be either $normal, $hover, $active or $focus.

.btn-green {
  @include btn-color-themes(
    $normal: $color-white $color-brand-green null,
    $hover: $color-white null null
  );
}
.btn-fuchsia {
  @include btn-color-themes(
    $normal: $color-white $color-brand-fuchsia null,
    $hover: $color-white null null
  );
}
.btn-white {
  @include btn-color-themes(
    $normal: $color-brand-blue $color-white null,
    $hover: $color-brand-fuchsia null null
  );
}
.btn-trans-white {
  transition: $component-hover-fx-duration;
  @include btn-color-themes(
    $normal: $color-white transparent null,
    $hover: $color-brand-blue null null
  );
}
.btn-trans-alt {
  transition: $component-hover-fx-duration;
  @include btn-color-themes(
    $normal: $color-brand-grey-dark transparent null,
    $hover: $color-brand-fuchsia null null
  );
}
.btn-grey {
  @include btn-color-themes(
    $normal: $color-brand-blue $color-brand-grey-light null,
    $hover: $color-brand-fuchsia null null
  );
}
.btn-facebook {
  @include btn-color-themes(
    $normal: $color-white $color-facebook null,
    $hover: $color-white $color-facebook null null
  );
}
.btn-google {
  @include btn-color-themes(
    $normal: $color-white $color-google null,
    $hover: $color-white $color-google null null
  );
}

.btn-tab {
  transition: $component-hover-fx-duration;
  border-radius: 0;
  margin: 0;
  padding: 0 $button-size-normal;
  @include fluid-prop(padding-left, 15px, $button-size-normal);
  @include fluid-prop(padding-right, 15px, $button-size-normal);


  @include btn-color-themes(
    $normal: $color-brand-blue $color-brand-grey-light null,
    $hover: $color-brand-fuchsia null null
  );

  &:first-of-type {
    border-radius: $component-border-radius 0 0 $component-border-radius;
  }
  &:last-of-type {
    border-radius: 0 $component-border-radius $component-border-radius 0;
  }

  .tab-input:checked + & {
    pointer-events: none;
    @include btn-color-themes($normal: $color-white $color-brand-fuchsia null);
  }
}
.btn-toggle {
  padding: 0 ($button-size-normal / 2);
  @include btn-color-themes($normal: $color-brand-grey-dark transparent null);

  .toggle-input:checked + & {
    @include btn-color-themes($normal: $color-brand-blue null null);
  }

  &:last-child {
    margin-right: - ($button-size-normal / 2);
  }
}

.btn-sidebar {
  border-radius: 0;
  height: $button-size-lg;
  width: 100%;
  padding: 0 0 0 $button-size-lg / 2;
  margin: 0;
  justify-content: flex-start;

  @include btn-color-themes(
    $normal: $color-brand-grey-light transparent null,
    $hover: $color-brand-grey-light $color-brand-teal null null
  );

  .icon {
    fill: $color-brand-fuchsia;
    width: $component-icon-size-md;
    height: $component-icon-size-md;
  }
  > :not(:first-child) {
    margin-left: $component-icon-size-lg;
  }

  &.active, .active > & {
    pointer-events: none;
    @include btn-color-themes($color-white $color-brand-fuchsia null);
  }
}



